---
- name: Install SELinux python3 tools
  package:
    name:
      - libselinux-python
      - policycoreutils-python
    state: present
    
- name: Enable SELinux
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  register: result

- name: Reboot immediately if there was a change.
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: result is succeeded

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 100
  when: result is succeeded

- name: Enable SSH Port SELinux
  community.general.seport:
    ports: 12235
    proto: tcp
    setype: ssh_port_t
    state: present

- name: Enable SELinux
  ansible.posix.selinux:
    policy: targeted
    state: enforcing
  register: result

- name: Reboot immediately if there was a change.
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: result is succeeded

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 100
  when: result is succeeded



# - name: Disable Special Permissions
#   ansible.builtin.command: rttahc -a /usr/local/dcon/users_historylogs/*

  
# - name: Setting SELinux Context
#   community.general.sefcontext:
#     target: '/usr/local/dcon/users_historylogs(/.*)?'
#     seuser: system_u
#     setype: usr_t
#     state: present

# - name: Apply new SELinux file context to filesystem
#   ansible.builtin.command: restorecon -R -v /usr/local/dcon/users_historylogs
#   register: restorecon_cmd
#   changed_when: '"Would relabel" in restorecon_cmd.stdout'
#   check_mode: no

# - name: Enable Special Permissions
#   ansible.builtin.command: rttahc +a /usr/local/dcon/users_historylogs/*

